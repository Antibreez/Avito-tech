"use strict";!function(){var e=Array.prototype.forEach,t=function(e){e.value=""};window.DomUtil={isHidden:function(e){return e.classList.contains("hidden")},show:function(e){e.classList.remove("hidden")},hide:function(e){e.classList.add("hidden")},clear:function(){e.call(arguments,t)},makeFragmentRender:function(e){return function(t){var n=document.createDocumentFragment();return t.forEach((function(t,o){n.appendChild(e(t,o))})),n}}}}(),function(){var e=function(e){return e?"https://boiling-refuge-66454.herokuapp.com/images/"+e:"https://boiling-refuge-66454.herokuapp.com/images"},t="GET",n=200,o=300,i=function(e,t){var i=new XMLHttpRequest;return i.timeout=1e4,i.responseType="json",i.addEventListener("load",(function(){!function(e){return e.status<n||e.status>o}(i)?e(i.response):t("Данные не загрузились. Причина: "+i.status+" "+i.statusText)})),i.addEventListener("error",(function(){t("Произошла ошибка соединения")})),i.addEventListener("timeout",(function(){t("Запрос не успел выполниться за "+i.timeout+"мс")})),i},r=function(e){e.remove()},c=function(e){var t=document.createElement("div");t.style="z-index: 100; margin: 0 auto; text-align: center; background-color: red;",t.style.position="absolute",t.style.left=0,t.style.right=0,t.style.fontSize="30px",t.textContent=e,document.body.insertAdjacentElement("afterbegin",t),window.setTimeout(r,2e3,t)};window.backend={load:function(n,o,r){var u=i(o,r||c);u.open(t,e(n)),u.send()}}}(),function(e,t){var n=document.querySelector("body"),o=document.querySelector(".popup"),i=document.querySelector(".popup__overlay"),r=document.querySelector(".popup__picture"),c=document.querySelector(".popup__comments"),u=document.querySelector(".popup__close"),s=document.querySelector(".popup__form"),a=s.querySelector("input[name='name']"),d=s.querySelector("input[name='comment']"),l=document.querySelector("#comment").content.querySelector(".comment"),m=function(e){return Math.floor(e/10)>0?e:"0"+e},p=t((function(e){var t,n,o,i,r=l.cloneNode(!0);return r.querySelector(".comment__date").textContent=(t=e.date,n=(t=new Date(t)).getDay(),o=t.getMonth()+1,i=t.getFullYear(),m(n)+"."+m(o)+"."+i),r.querySelector(".comment__message").textContent=e.text,r})),h=function(e){r.src=e.url;var t=e.comments;c.appendChild(p(t))},f=function(e){c.removeChild(e)},y=function(){this.data={},this.id=0,this._close=this._close.bind(this),this._onKeyDown=this._onKeyDown.bind(this),this._onSubmit=this._onSubmit.bind(this)};y.prototype.show=function(t){this.id=t,e.load(t,h),n.classList.add("popup"),window.DomUtil.show(o),this._addEventListeners()},y.prototype._clear=function(){c.querySelectorAll(".comment").forEach(f),r.src="",a.value="",d.value=""},y.prototype._close=function(){n.classList.remove("popup"),window.DomUtil.hide(o),this._clear(),this._removeEventListeners()},y.prototype._onKeyDown=function(e){"Esc"!==e.key&&"Escape"!==e.key||this._close()},y.prototype._onSubmit=function(e){e.preventDefault(),s.action="https://boiling-refuge-66454.herokuapp.com/images/"+this.id+"/comments",s.submit(),this._close()},y.prototype._addEventListeners=function(){u.addEventListener("click",this._close),i.addEventListener("click",this._close),document.addEventListener("keydown",this._onKeyDown),s.addEventListener("submit",this._onSubmit)},y.prototype._removeEventListeners=function(){u.removeEventListener("click",this._close),i.removeEventListener("click",this._close),document.removeEventListener("keydown",this._onKeyDown),s.removeEventListener("submit",this._onSubmit)},window.Popup=y}(window.backend,window.DomUtil.makeFragmentRender),function(e,t,n){var o=document.querySelector(".gallery"),i=document.querySelector("#picture").content.querySelector(".picture-box"),r=new n,c=t((function(e){var t=i.cloneNode(!0),n=t.querySelector(".picture");return n.src=e.url,n.dataset.id=e.id,t}));e.load(null,(function(e){o.appendChild(c(e))})),o.addEventListener("click",(function(e){var t=e.target.classList.contains("picture")?e.target:e.target.classList.contains("picture-box")?e.target.querySelector("picture"):null;t&&r.show(t.dataset.id)}))}(window.backend,window.DomUtil.makeFragmentRender,window.Popup);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbVV0aWwuanMiLCJiYWNrZW5kLmpzIiwicG9wdXAuanMiLCJtYWluLmpzIl0sIm5hbWVzIjpbImZvckVhY2giLCJBcnJheSIsInByb3RvdHlwZSIsImNsZWFySW5wdXQiLCJpbnB1dCIsInZhbHVlIiwid2luZG93IiwiRG9tVXRpbCIsImlzSGlkZGVuIiwiZWxlbWVudCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwic2hvdyIsInJlbW92ZSIsImhpZGUiLCJhZGQiLCJjbGVhciIsImNhbGwiLCJhcmd1bWVudHMiLCJtYWtlRnJhZ21lbnRSZW5kZXIiLCJyZW5kZXIiLCJkYXRhTGlzdCIsImZyYWdtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiZGF0YSIsImlkeCIsImFwcGVuZENoaWxkIiwiUmVxVXJsIiwiaWQiLCJSZXFNZXRob2QiLCJSZXFTdGF0dXMiLCJjcmVhdGVSZXF1ZXN0Iiwib25Mb2FkIiwib25FcnJvciIsInhociIsIlhNTEh0dHBSZXF1ZXN0IiwidGltZW91dCIsInJlc3BvbnNlVHlwZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdGF0dXMiLCJpc0Vycm9yU3RhdHVzIiwicmVzcG9uc2UiLCJzdGF0dXNUZXh0IiwicmVtb3ZlRWxlbWVudCIsIm9uQW55RXJyb3IiLCJtZXNzYWdlIiwibm9kZSIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsInBvc2l0aW9uIiwibGVmdCIsInJpZ2h0IiwiZm9udFNpemUiLCJ0ZXh0Q29udGVudCIsImJvZHkiLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJzZXRUaW1lb3V0IiwiYmFja2VuZCIsImxvYWQiLCJyZXEiLCJvcGVuIiwic2VuZCIsInF1ZXJ5U2VsZWN0b3IiLCJwb3B1cCIsIm92ZXJsYXkiLCJwaWN0dXJlIiwiY29tbWVudHMiLCJjbG9zZSIsImZvcm0iLCJuYW1lSW5wdXQiLCJjb21tZW50SW5wdXQiLCJjb21tZW50VGVtcGxhdGUiLCJjb250ZW50IiwiZ2V0Q29ycmVjdE51bWJlciIsIm51bSIsIk1hdGgiLCJmbG9vciIsImdldENvbW1lbnRzRnJhZ21lbnQiLCJjb21tZW50IiwiZGF0ZSIsImRheSIsIm1vbnRoIiwieWVhciIsImNsb25lTm9kZSIsIkRhdGUiLCJnZXREYXkiLCJnZXRNb250aCIsImdldEZ1bGxZZWFyIiwidGV4dCIsIm9uRGF0YUxvYWQiLCJzcmMiLCJ1cmwiLCJjb21tZW50c0RhdGEiLCJyZW1vdmVDb21tZW50IiwicmVtb3ZlQ2hpbGQiLCJQb3B1cCIsInRoaXMiLCJfY2xvc2UiLCJiaW5kIiwiX29uS2V5RG93biIsIl9vblN1Ym1pdCIsIl9hZGRFdmVudExpc3RlbmVycyIsIl9jbGVhciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfcmVtb3ZlRXZlbnRMaXN0ZW5lcnMiLCJldnQiLCJrZXkiLCJwcmV2ZW50RGVmYXVsdCIsImFjdGlvbiIsInN1Ym1pdCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJnYWxsZXJ5IiwicGljdHVyZVRlbXBsYXRlIiwiZ2V0R2FsbGVyeUZyYWdtZW50IiwiaW1nIiwiZGF0YXNldCIsInBpY3R1cmVzIiwidGFyZ2V0Il0sIm1hcHBpbmdzIjoiQUFBQSxjQUVBLFdBQ0EsSUFBQUEsRUFBQUMsTUFBQUMsVUFBQUYsUUFFQUcsRUFBQSxTQUFBQyxHQUNBQSxFQUFBQyxNQUFBLElBR0FDLE9BQUFDLFFBQUEsQ0FDQUMsU0FBQSxTQUFBQyxHQUNBLE9BQUFBLEVBQUFDLFVBQUFDLFNBQUEsV0FHQUMsS0FBQSxTQUFBSCxHQUNBQSxFQUFBQyxVQUFBRyxPQUFBLFdBR0FDLEtBQUEsU0FBQUwsR0FDQUEsRUFBQUMsVUFBQUssSUFBQSxXQUdBQyxNQUFBLFdBQ0FoQixFQUFBaUIsS0FBQUMsVUFBQWYsSUFHQWdCLG1CQUFBLFNBQUFDLEdBQ0EsT0FBQSxTQUFBQyxHQUNBLElBQUFDLEVBQUFDLFNBQUFDLHlCQUtBLE9BSkFILEVBQUFyQixTQUFBLFNBQUF5QixFQUFBQyxHQUNBSixFQUFBSyxZQUFBUCxFQUFBSyxFQUFBQyxPQUdBSixL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LEVBQ0F2QyxFQUNBNkUsR0FFQSxJQUFBZ0IsRUFBQXpGLFNBQUF3QyxjQUFBLFlBQ0FrRCxFQUFBMUYsU0FBQXdDLGNBQUEsWUFBQVUsUUFBQVYsY0FBQSxnQkFFQUMsRUFBQSxJQUFBZ0MsRUFXQWtCLEVBQUEvRixHQVRBLFNBQUErQyxHQUNBLElBQUFuQixFQUFBa0UsRUFBQTdCLFdBQUEsR0FDQStCLEVBQUFwRSxFQUFBZ0IsY0FBQSxZQUlBLE9BSEFvRCxFQUFBeEIsSUFBQXpCLEVBQUEwQixJQUNBdUIsRUFBQUMsUUFBQXZGLEdBQUFxQyxFQUFBckMsR0FFQWtCLEtBbUJBVyxFQUFBQyxLQUFBLE1BZEEsU0FBQTBELEdBQ0FMLEVBQUFyRixZQUFBdUYsRUFBQUcsT0FjQUwsRUFBQXpFLGlCQUFBLFNBWEEsU0FBQW1FLEdBQ0EsSUFBQVksRUFBQVosRUFBQVksT0FBQTVHLFVBQUFDLFNBQUEsV0FBQStGLEVBQUFZLE9BQ0FaLEVBQUFZLE9BQUE1RyxVQUFBQyxTQUFBLGVBQUErRixFQUFBWSxPQUFBdkQsY0FBQSxXQUNBLEtBRUF1RCxHQUNBdEQsRUFBQXBELEtBQUEwRyxFQUFBRixRQUFBdkYsT0EvQkEsQ0FzQ0F2QixPQUFBb0QsUUFDQXBELE9BQUFDLFFBQUFZLG1CQUNBYixPQUFBMEYiLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuKGZ1bmN0aW9uICgpIHtcbiAgdmFyIGZvckVhY2ggPSBBcnJheS5wcm90b3R5cGUuZm9yRWFjaDtcblxuICB2YXIgY2xlYXJJbnB1dCA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIGlucHV0LnZhbHVlID0gJyc7XG4gIH07XG5cbiAgd2luZG93LkRvbVV0aWwgPSB7XG4gICAgaXNIaWRkZW46IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICByZXR1cm4gZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2hpZGRlbicpO1xuICAgIH0sXG5cbiAgICBzaG93OiBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICB9LFxuXG4gICAgaGlkZTogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgfSxcblxuICAgIGNsZWFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICBmb3JFYWNoLmNhbGwoYXJndW1lbnRzLCBjbGVhcklucHV0KTtcbiAgICB9LFxuXG4gICAgbWFrZUZyYWdtZW50UmVuZGVyOiBmdW5jdGlvbiAocmVuZGVyKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKGRhdGFMaXN0KSB7XG4gICAgICAgIHZhciBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICAgICAgZGF0YUxpc3QuZm9yRWFjaChmdW5jdGlvbiAoZGF0YSwgaWR4KSB7XG4gICAgICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQocmVuZGVyKGRhdGEsIGlkeCkpO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZnJhZ21lbnQ7XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn0pKCk7XG4iLCIndXNlIHN0cmljdCc7XG5cbihmdW5jdGlvbiAoKSB7XG4gIHZhciBSZXFVcmwgPSB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHJldHVybiBpZCA/ICdodHRwczovL2JvaWxpbmctcmVmdWdlLTY2NDU0Lmhlcm9rdWFwcC5jb20vaW1hZ2VzLycgKyBpZFxuICAgICAgICA6ICdodHRwczovL2JvaWxpbmctcmVmdWdlLTY2NDU0Lmhlcm9rdWFwcC5jb20vaW1hZ2VzJztcbiAgICB9XG4gIH07XG5cbiAgLy8gdmFyIGdldFJlcVVybCA9IGZ1bmN0aW9uIChpZCkge1xuICAvLyAgIHJldHVybiBpZCA/ICdodHRwOi8vMTM0LjIwOS4xMzguMzQvaXRlbS8nICsgaWQgOiAnaHR0cDovLzEzNC4yMDkuMTM4LjM0L2l0ZW1zJztcbiAgLy8gfTtcblxuICB2YXIgUmVxTWV0aG9kID0ge1xuICAgIEdFVDogJ0dFVCcsXG4gIH07XG5cbiAgdmFyIFJlcVN0YXR1cyA9IHtcbiAgICBPSzogMjAwLFxuICAgIE1VTFRJUExFX0NIT0lDRVM6IDMwMCxcbiAgfTtcblxuICB2YXIgVElNRU9VVCA9IDEwMDAwO1xuXG4gIHZhciBpc0Vycm9yU3RhdHVzID0gZnVuY3Rpb24gKHhocikge1xuICAgIHJldHVybiB4aHIuc3RhdHVzIDwgUmVxU3RhdHVzLk9LXG4gICAgICB8fCB4aHIuc3RhdHVzID4gUmVxU3RhdHVzLk1VTFRJUExFX0NIT0lDRVM7XG4gIH07XG5cbiAgdmFyIGNyZWF0ZVJlcXVlc3QgPSBmdW5jdGlvbiAob25Mb2FkLCBvbkVycm9yKSB7XG4gICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXG4gICAgeGhyLnRpbWVvdXQgPSBUSU1FT1VUO1xuICAgIHhoci5yZXNwb25zZVR5cGUgPSAnanNvbic7XG5cbiAgICB4aHIuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Vycm9yU3RhdHVzKHhocikpIHtcbiAgICAgICAgb25FcnJvcign0JTQsNC90L3Ri9C1INC90LUg0LfQsNCz0YDRg9C30LjQu9C40YHRjC4g0J/RgNC40YfQuNC90LA6ICcgKyB4aHIuc3RhdHVzICsgJyAnICsgeGhyLnN0YXR1c1RleHQpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIG9uTG9hZCh4aHIucmVzcG9uc2UpO1xuICAgIH0pO1xuXG4gICAgeGhyLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZnVuY3Rpb24gKCkge1xuICAgICAgb25FcnJvcign0J/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsCDRgdC+0LXQtNC40L3QtdC90LjRjycpO1xuICAgIH0pO1xuXG4gICAgeGhyLmFkZEV2ZW50TGlzdGVuZXIoJ3RpbWVvdXQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBvbkVycm9yKCfQl9Cw0L/RgNC+0YEg0L3QtSDRg9GB0L/QtdC7INCy0YvQv9C+0LvQvdC40YLRjNGB0Y8g0LfQsCAnICsgeGhyLnRpbWVvdXQgKyAn0LzRgScpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHhocjtcbiAgfTtcblxuICB2YXIgcmVtb3ZlRWxlbWVudCA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgZWxlbWVudC5yZW1vdmUoKTtcbiAgfTtcblxuICB2YXIgb25BbnlFcnJvciA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBub2RlLnN0eWxlID0gJ3otaW5kZXg6IDEwMDsgbWFyZ2luOiAwIGF1dG87IHRleHQtYWxpZ246IGNlbnRlcjsgYmFja2dyb3VuZC1jb2xvcjogcmVkOyc7XG4gICAgbm9kZS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgbm9kZS5zdHlsZS5sZWZ0ID0gMDtcbiAgICBub2RlLnN0eWxlLnJpZ2h0ID0gMDtcbiAgICBub2RlLnN0eWxlLmZvbnRTaXplID0gJzMwcHgnO1xuXG4gICAgbm9kZS50ZXh0Q29udGVudCA9IG1lc3NhZ2U7XG4gICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEVsZW1lbnQoJ2FmdGVyYmVnaW4nLCBub2RlKTtcbiAgICB3aW5kb3cuc2V0VGltZW91dChyZW1vdmVFbGVtZW50LCAyMDAwLCBub2RlKTtcbiAgfTtcblxuICB3aW5kb3cuYmFja2VuZCA9IHtcbiAgICBsb2FkOiBmdW5jdGlvbiAoaWQsIG9uTG9hZCwgb25FcnJvcikge1xuICAgICAgdmFyIHJlcSA9IGNyZWF0ZVJlcXVlc3Qob25Mb2FkLCBvbkVycm9yIHx8IG9uQW55RXJyb3IpO1xuICAgICAgcmVxLm9wZW4oUmVxTWV0aG9kLkdFVCwgUmVxVXJsLmdldChpZCkpO1xuICAgICAgcmVxLnNlbmQoKTtcbiAgICB9XG4gIH07XG59KSgpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4oZnVuY3Rpb24gKFxuICAgIGJhY2tlbmQsXG4gICAgbWFrZUZyYWdtZW50UmVuZGVyXG4pIHtcbiAgdmFyIGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk7XG4gIHZhciBwb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cCcpO1xuICB2YXIgb3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fb3ZlcmxheScpO1xuICB2YXIgcGljdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fcGljdHVyZScpO1xuICB2YXIgY29tbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2NvbW1lbnRzJyk7XG4gIHZhciBjbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UnKTtcbiAgdmFyIGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcbiAgdmFyIG5hbWVJbnB1dCA9IGZvcm0ucXVlcnlTZWxlY3RvcihcImlucHV0W25hbWU9J25hbWUnXVwiKTtcbiAgdmFyIGNvbW1lbnRJbnB1dCA9IGZvcm0ucXVlcnlTZWxlY3RvcihcImlucHV0W25hbWU9J2NvbW1lbnQnXVwiKTtcbiAgdmFyIGNvbW1lbnRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb21tZW50JykuY29udGVudC5xdWVyeVNlbGVjdG9yKCcuY29tbWVudCcpO1xuXG4gIHZhciBnZXRDb3JyZWN0TnVtYmVyID0gZnVuY3Rpb24gKG51bSkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKG51bSAvIDEwKSA+IDAgPyBudW0gOiAnMCcgKyBudW07XG4gIH07XG5cbiAgdmFyIGdldERhdGUgPSBmdW5jdGlvbiAoZGF0ZSkge1xuICAgIHZhciBkYXRlID0gbmV3IERhdGUoZGF0ZSk7XG5cbiAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXkoKTtcbiAgICB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxO1xuICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuXG4gICAgcmV0dXJuIGdldENvcnJlY3ROdW1iZXIoZGF5KSArICcuJyArIGdldENvcnJlY3ROdW1iZXIobW9udGgpICsgJy4nICsgeWVhcjtcbiAgfTtcblxuICB2YXIgcmVuZGVyQ29tbWVudCA9IGZ1bmN0aW9uIChjb21tZW50KSB7XG4gICAgdmFyIG5vZGUgPSBjb21tZW50VGVtcGxhdGUuY2xvbmVOb2RlKHRydWUpO1xuICAgIG5vZGUucXVlcnlTZWxlY3RvcignLmNvbW1lbnRfX2RhdGUnKS50ZXh0Q29udGVudCA9IGdldERhdGUoY29tbWVudC5kYXRlKTtcbiAgICBub2RlLnF1ZXJ5U2VsZWN0b3IoJy5jb21tZW50X19tZXNzYWdlJykudGV4dENvbnRlbnQgPSBjb21tZW50LnRleHQ7XG5cbiAgICByZXR1cm4gbm9kZTtcbiAgfTtcblxuICB2YXIgZ2V0Q29tbWVudHNGcmFnbWVudCA9IG1ha2VGcmFnbWVudFJlbmRlcihyZW5kZXJDb21tZW50KTtcblxuICB2YXIgb25EYXRhTG9hZCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgcGljdHVyZS5zcmMgPSBkYXRhLnVybDtcblxuICAgIHZhciBjb21tZW50c0RhdGEgPSBkYXRhLmNvbW1lbnRzO1xuXG4gICAgY29tbWVudHMuYXBwZW5kQ2hpbGQoZ2V0Q29tbWVudHNGcmFnbWVudChjb21tZW50c0RhdGEpKVxuICB9O1xuXG4gIHZhciByZW1vdmVDb21tZW50ID0gZnVuY3Rpb24gKGNvbW1lbnQpIHtcbiAgICBjb21tZW50cy5yZW1vdmVDaGlsZChjb21tZW50KTtcbiAgfTtcblxuICB2YXIgUG9wdXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5kYXRhID0ge307XG4gICAgdGhpcy5pZCA9IDA7XG4gICAgdGhpcy5fY2xvc2UgPSB0aGlzLl9jbG9zZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uS2V5RG93biA9IHRoaXMuX29uS2V5RG93bi5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uU3VibWl0ID0gdGhpcy5fb25TdWJtaXQuYmluZCh0aGlzKTtcbiAgfTtcblxuICBQb3B1cC5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uIChpZCkge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICBiYWNrZW5kLmxvYWQoaWQsIG9uRGF0YUxvYWQpO1xuICAgIGJvZHkuY2xhc3NMaXN0LmFkZCgncG9wdXAnKTtcbiAgICB3aW5kb3cuRG9tVXRpbC5zaG93KHBvcHVwKTtcbiAgICB0aGlzLl9hZGRFdmVudExpc3RlbmVycygpO1xuICB9O1xuXG4gIFBvcHVwLnByb3RvdHlwZS5fY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29tbWVudHMucXVlcnlTZWxlY3RvckFsbCgnLmNvbW1lbnQnKS5mb3JFYWNoKHJlbW92ZUNvbW1lbnQpO1xuICAgIHBpY3R1cmUuc3JjID0gJyc7XG4gICAgbmFtZUlucHV0LnZhbHVlID0gJyc7XG4gICAgY29tbWVudElucHV0LnZhbHVlID0gJyc7XG4gIH07XG5cbiAgUG9wdXAucHJvdG90eXBlLl9jbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwJyk7XG4gICAgd2luZG93LkRvbVV0aWwuaGlkZShwb3B1cCk7XG4gICAgdGhpcy5fY2xlYXIoKTtcbiAgICB0aGlzLl9yZW1vdmVFdmVudExpc3RlbmVycygpO1xuICB9O1xuXG4gIFBvcHVwLnByb3RvdHlwZS5fb25LZXlEb3duID0gZnVuY3Rpb24gKGV2dCkge1xuICAgIGlmIChldnQua2V5ID09PSAnRXNjJyB8fCBldnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgdGhpcy5fY2xvc2UoKTtcbiAgICB9XG4gIH07XG5cbiAgUG9wdXAucHJvdG90eXBlLl9vblN1Ym1pdCA9IGZ1bmN0aW9uIChldnQpIHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGZvcm0uYWN0aW9uID0gJ2h0dHBzOi8vYm9pbGluZy1yZWZ1Z2UtNjY0NTQuaGVyb2t1YXBwLmNvbS9pbWFnZXMvJyArIHRoaXMuaWQgKyAnL2NvbW1lbnRzJztcbiAgICBmb3JtLnN1Ym1pdCgpO1xuICAgIHRoaXMuX2Nsb3NlKCk7XG4gIH07XG5cbiAgUG9wdXAucHJvdG90eXBlLl9hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICBjbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2Nsb3NlKTtcbiAgICBvdmVybGF5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fY2xvc2UpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9vbktleURvd24pO1xuICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgdGhpcy5fb25TdWJtaXQpO1xuICB9O1xuXG4gIFBvcHVwLnByb3RvdHlwZS5fcmVtb3ZlRXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgY2xvc2UucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9jbG9zZSk7XG4gICAgb3ZlcmxheS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2Nsb3NlKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fb25LZXlEb3duKTtcbiAgICBmb3JtLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHRoaXMuX29uU3VibWl0KTtcbiAgfTtcblxuICB3aW5kb3cuUG9wdXAgPSBQb3B1cDtcbn0pKFxuICAgIHdpbmRvdy5iYWNrZW5kLFxuICAgIHdpbmRvdy5Eb21VdGlsLm1ha2VGcmFnbWVudFJlbmRlclxuKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuKGZ1bmN0aW9uIChcbiAgICBiYWNrZW5kLFxuICAgIG1ha2VGcmFnbWVudFJlbmRlcixcbiAgICBQb3B1cFxuKXtcbiAgdmFyIGdhbGxlcnkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ2FsbGVyeScpO1xuICB2YXIgcGljdHVyZVRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BpY3R1cmUnKS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy5waWN0dXJlLWJveCcpO1xuXG4gIHZhciBwb3B1cCA9IG5ldyBQb3B1cCgpO1xuXG4gIHZhciByZW5kZXJQaWN0dXJlID0gZnVuY3Rpb24gKHBpY3R1cmUpIHtcbiAgICB2YXIgbm9kZSA9IHBpY3R1cmVUZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgdmFyIGltZyA9IG5vZGUucXVlcnlTZWxlY3RvcignLnBpY3R1cmUnKTtcbiAgICBpbWcuc3JjID0gcGljdHVyZS51cmw7XG4gICAgaW1nLmRhdGFzZXQuaWQgPSBwaWN0dXJlLmlkO1xuXG4gICAgcmV0dXJuIG5vZGU7XG4gIH07XG5cbiAgdmFyIGdldEdhbGxlcnlGcmFnbWVudCA9IG1ha2VGcmFnbWVudFJlbmRlcihyZW5kZXJQaWN0dXJlKTtcblxuICB2YXIgc2V0R2FsbGVyeSA9IGZ1bmN0aW9uIChwaWN0dXJlcykge1xuICAgIGdhbGxlcnkuYXBwZW5kQ2hpbGQoZ2V0R2FsbGVyeUZyYWdtZW50KHBpY3R1cmVzKSk7XG4gIH07XG5cbiAgdmFyIG9uR2FsbGVyeUNsaWNrID0gZnVuY3Rpb24gKGV2dCkge1xuICAgIHZhciB0YXJnZXQgPSBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncGljdHVyZScpID8gZXZ0LnRhcmdldFxuICAgICAgOiBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncGljdHVyZS1ib3gnKSA/IGV2dC50YXJnZXQucXVlcnlTZWxlY3RvcigncGljdHVyZScpXG4gICAgICA6IG51bGw7XG5cbiAgICBpZiAodGFyZ2V0KSB7XG4gICAgICBwb3B1cC5zaG93KHRhcmdldC5kYXRhc2V0LmlkKTtcbiAgICB9XG4gIH1cblxuICBiYWNrZW5kLmxvYWQobnVsbCwgc2V0R2FsbGVyeSk7XG4gIGdhbGxlcnkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbkdhbGxlcnlDbGljayk7XG59KShcbiAgICB3aW5kb3cuYmFja2VuZCxcbiAgICB3aW5kb3cuRG9tVXRpbC5tYWtlRnJhZ21lbnRSZW5kZXIsXG4gICAgd2luZG93LlBvcHVwXG4pO1xuIl19
